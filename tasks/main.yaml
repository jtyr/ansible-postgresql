---

- name: Add YUM repo
  yum_repository:
    name: postgresql
    description: PostgreSQL YUM repo
    baseurl: "{{ postgresql_yumrepo_url }}"
    gpgkey: "{{ postgresql_yumrepo_gpgkey }}"
    params: "{{ postgresql_yumrepo_params }}"
  when: postgresql_yumrepo_install == true
  tags:
    - postgresql_pkg

- name: Install PostgreSQL server
  package:
    name: "{{ postgresql_pkg }}"
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_pkg

- name: Check if it needs initialization
  shell: test -f {{ postgresql_data_directory }}/PG_VERSION
  register: postgresql_needs_init
  changed_when: false
  failed_when: false
  tags:
    - postgresql_config

- name: Initialize the DB with init.d
  shell: env service postgresql-{{ postgresql_yumrepo_version }} initdb
  environment:
    PGDATA: "{{ postgresql_data_directory }}"
  when: >
    postgresql_needs_init.rc > 0 and
    ansible_distribution_major_version | int < 7
  tags:
    - postgresql_config

- name: Initialize the DB with system.d
  shell: /usr/pgsql-{{ postgresql_yumrepo_version }}/bin/postgresql{{'-' if postgresql_yumrepo_ver | int >= 10 else '' }}{{ postgresql_yumrepo_ver }}-setup initdb
  environment:
    PGDATA: "{{ postgresql_data_directory }}"
  when: >
    postgresql_needs_init.rc > 0 and
    ansible_distribution_major_version | int > 6
  tags:
    - postgresql_config

- name: Configure PostgreSQL server
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_config_file }}"
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_config

- name: Configure PostgreSQL server HBA
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_hba_config_file }}"
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_config

- name: Configure PostgreSQL server ident
  template:
    src: pg_ident.conf.j2
    dest: "{{ postgresql_ident_config_file }}"
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_config

- name: Configure PostgreSQL server service
  template:
    src: pg_service.conf.j2
    dest: "{{ postgresql_service_config_file }}"
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_config

- name: Configure PostgreSQL server recovery
  template:
    src: recovery.conf.j2
    dest: "{{ postgresql_recovery_config_file }}"
  when: postgresql_recovery_config | length > 0
  notify:
    - Restart PostgreSQL server
  tags:
    - postgresql_config

- name: Make sure the service is enabled
  service:
    name: "{{ postgresql_service }}"
    enabled: yes
  tags:
    - postgresql_config

- name: Make sure the service is running
  service:
    name: "{{ postgresql_service }}"
    state: started
  register: postgresql_service_started
  tags:
    - postgresql_config
    - postgresql_pkg

- name: Set DB password for postgres user
  command: psql -c "ALTER USER Postgres WITH PASSWORD '{{ postgresql_postgres_password }}'"
  become: yes
  become_user: postgres
  when: postgresql_needs_init.rc > 0
  tags:
    - postgresql_config
